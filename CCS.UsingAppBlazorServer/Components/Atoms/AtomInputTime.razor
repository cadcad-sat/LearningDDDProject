<div class="@RootCssClass">
    <label for="@componentId">@LabelText</label>
    <input id="@componentId" type="time" class="form-control @CssClass" @onchange="OnValueChanged" value="@Value?.ToString("hh:mm")" />
    <div class="invalid-feedback">@ErrorMessage</div>
</div>

@code {
    [Parameter] public string LabelText { get; set; } = string.Empty;
    [Parameter] public string CssClass { get; set; } = string.Empty;
    [Parameter] public DateTime? Value { get; set; }
    [Parameter] public EventCallback<DateTime?> ValueChanged { get; set; }
    [Parameter] public string ErrorMessage { get; set; } = string.Empty;
    [Parameter] public string RootCssClass { get; set; } = "form-group m-1";

    private Guid componentId = Guid.NewGuid();
    private string isValidCss { get { return string.IsNullOrEmpty(ErrorMessage) ? string.Empty : "is-invalid"; } }

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        string v = $"{e.Value}";
        if (DateTime.TryParse(v, out DateTime result))
        {
            await ValueChanged.InvokeAsync(result);
        }
    }
}
